TYPEMAP

LMDB::Core::Env T_PTROBJ
LMDB::Core::EnvInfo T_PTROBJ
LMDB::Core::Txn T_PTROBJ
LMDB::Core::Stat T_PTROBJ
LMDB::Core::Cursor    T_PTROBJ
TxnOrNull     T_PTROBJ_N
MDB_dbi     unsigned int
MDB_valIn   T_mdb_val_in
MDB_valInOut   T_mdb_val_in_out
MDB_cursor_op T_UV

INPUT

T_PTROBJ_N
        if(!SvTRUE($arg)) {
            $var = ($type) NULL;
        } else if (SvROK($arg) && sv_derived_from($arg, \"LMDB::Txn\")) {
            IV tmp = SvIV((SV*)SvRV($arg));
            $var = INT2PTR($type,tmp);
        }
        else
            Perl_croak(aTHX_ \"%s: %s is not of type %s\",
                        ${$ALIAS?\q[GvNAME(CvGV(cv))]:\qq[\"$pname\"]},
                        \"$var\", \"LMDB::Txn\");
T_mdb_val_in
	$var.mv_data = SvPV($arg, $var.mv_size);

T_mdb_val_in_out
	$var.mv_data = SvPV($arg, $var.mv_size);

####################################################################################
OUTPUT
T_mdb_val_in_out
    if($arg != &PL_sv_undef) {
        SvPVX($arg) = $var.mv_data;
        SvLEN($arg) = 0;
        SvCUR($arg) = $var.mv_size;
        SvUTF8_off($arg);
        SvREADONLY_on($arg);
        SvTAINTED_on($arg);
    }
